# Yazi 键位配置 (v25.5.31)
# 从 lf 迁移

# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[mgr]
prepend_keymap = [
  # ========================================
  # ijkl 导航
  # ========================================
  { on = "i", run = "arrow -1", desc = "上移" },
  { on = "k", run = "arrow 1", desc = "下移" },
  { on = "j", run = "leave", desc = "返回上级目录" },
  { on = "l", run = "plugin --sync smart_enter", desc = "智能进入/打开" },

  # ========================================
  # 文件操作
  # ========================================
  { on = [ "d", "d" ], run = "yank --cut", desc = "剪切文件" },
  { on = "D", run = "remove", desc = "删除文件" },
  { on = [ "y", "y" ], run = "yank", desc = "复制文件" },
  { on = "p", run = "paste", desc = "粘贴文件" },
  { on = "M", run = "create --dir", desc = "创建目录" },
  { on = "N", run = "create", desc = "创建文件" },

  # ========================================
  # 权限管理
  # ========================================
  { on = "c", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/chmod.sh \"$@\"'", desc = "修改文件权限" },
  { on = "C", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/sudo_chmod.sh \"$@\"'", desc = "修改权限 (sudo)" },
  { on = "R", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/sudo_chown.sh \"$@\"'", desc = "修改所有者 (sudo)" },

  # ========================================
  # 重命名
  # ========================================
  { on = "r", run = "rename --cursor=before_ext", desc = "重命名（扩展名前）" },
  { on = "A", run = "rename --cursor=end", desc = "重命名（扩展名后）" },

  # ========================================
  # 显示控制
  # ========================================
  { on = "z", run = "hidden toggle", desc = "切换隐藏文件" },

  # 显示模式 (linemode)
  { on = [ "m", "s" ], run = "linemode size", desc = "显示文件大小" },
  { on = [ "m", "p" ], run = "linemode permissions", desc = "显示权限" },
  { on = [ "m", "b" ], run = "linemode btime", desc = "显示创建时间" },
  { on = [ "m", "m" ], run = "linemode mtime", desc = "显示修改时间" },
  { on = [ "m", "o" ], run = "linemode owner", desc = "显示所有者" },
  { on = [ "m", "n" ], run = "linemode none", desc = "隐藏额外信息" },

  # ========================================
  # 排序
  # ========================================
  { on = [ ",", "m" ], run = "sort mtime", desc = "按修改时间排序" },
  { on = [ ",", "M" ], run = "sort mtime --reverse", desc = "按修改时间倒序" },
  { on = [ ",", "s" ], run = "sort size", desc = "按大小排序" },
  { on = [ ",", "S" ], run = "sort size --reverse", desc = "按大小倒序" },
  { on = [ ",", "a" ], run = "sort alphabetical", desc = "按字母排序" },
  { on = [ ",", "A" ], run = "sort alphabetical --reverse", desc = "按字母倒序" },
  { on = [ ",", "n" ], run = "sort natural", desc = "按自然排序" },
  { on = [ ",", "N" ], run = "sort natural --reverse", desc = "按自然倒序" },

  # ========================================
  # 搜索（使用shell脚本，不用内置fzf）
  # ========================================
  { on = "f", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/fzf_jump.sh'", desc = "fzf 快速跳转" },
  { on = "<C-f>", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/fzf_file.sh'", desc = "fzf 文件搜索（带预览）" },
  { on = "<C-g>", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/fzf_search.sh'", desc = "fzf 内容搜索（rg）" },

  # ========================================
  # Git 集成
  # ========================================
  { on = "T", run = "shell --block --confirm 'bash ~/.config/yazi/scripts/tig.sh'", desc = "使用 tig 查看 git 状态" },

  # ========================================
  # 压缩（使用ouch插件，解压直接按l键）
  # ========================================
  { on = "Z", run = "plugin ouch --args=zip", desc = "压缩成zip" },

  # ========================================
  # 预览（使用shell脚本）
  # ========================================
  { on = "e", run = "shell --block 'bash ~/.config/yazi/scripts/smart_preview.sh \"$0\"'", desc = "智能预览（全屏 bat）" },
]

keymap = [
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "q",     run = "quit",               desc = "Quit the process" },
	{ on = "Q",     run = "quit --no-cwd-file", desc = "Quit without outputting cwd-file" },
	{ on = "<C-c>", run = "close",              desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

	# Hopping
	# { on = "k", run = "arrow prev", desc = "Previous file" },  # 被 prepend_keymap 覆盖
	# { on = "j", run = "arrow next", desc = "Next file" },  # 被 prepend_keymap 覆盖

	{ on = "<Up>",   run = "arrow prev", desc = "Previous file" },
	{ on = "<Down>", run = "arrow next", desc = "Next file" },

	{ on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
	# { on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },  # 被 prepend_keymap 覆盖

	{ on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<S-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
	{ on = "G",          run = "arrow bot", desc = "Go to bottom" },

	# Navigation
	#	{ on = "h", run = "leave", desc = "Back to the parent directory" },
	{ on = "h", run = "shell 'INSIDE_YAZI=1 zsh' --block", desc = "打开完整的 zsh 终端" },
	# { on = "l", run = "enter", desc = "Enter the child directory" },  # 被 prepend_keymap 覆盖

	{ on = "<Left>",  run = "leave", desc = "Back to the parent directory" },
	{ on = "<Right>", run = "enter", desc = "Enter the child directory" },

	{ on = "H", run = "back", desc = "Back to previous directory" },
	{ on = "L", run = "plugin lazygit", desc = "打开 lazygit" },

	# Toggle
	{ on = "<Space>", run = [ "toggle", "arrow next" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on",    desc = "Select all files" },
	{ on = "<C-r>",   run = "toggle_all",               desc = "Invert selection of all files" },

	# Visual mode
	{ on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

	# Seeking
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting
	{ on = "<Tab>", run = "spot", desc = "Spot hovered file" },

	# Operation
	{ on = "o",         run = "open",                        desc = "Open selected files" },
	{ on = "O",         run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = "<Enter>",   run = "open",                        desc = "Open selected files" },
	{ on = "<S-Enter>", run = "open --interactive",          desc = "Open selected files interactively" },
	# { on = "y",         run = "yank",                        desc = "Yank selected files (copy)" },  # 被 prepend_keymap 覆盖
	{ on = "x",         run = "yank --cut",                  desc = "Yank selected files (cut)" },
	# { on = "p",         run = "paste",                       desc = "Paste yanked files" },  # 被 prepend_keymap 覆盖
	{ on = "P",         run = "paste --force",               desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = "-",         run = "link",                        desc = "Symlink the absolute path of yanked files" },
	{ on = "_",         run = "link --relative",             desc = "Symlink the relative path of yanked files" },
	{ on = "<C-->",     run = "hardlink",                    desc = "Hardlink yanked files" },
	{ on = "Y",         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = "X",         run = "unyank",                      desc = "Cancel the yank status" },
	# { on = "d",         run = "remove",                      desc = "Trash selected files" },  # 被 prepend_keymap 覆盖
	# { on = "D",         run = "remove --permanently",        desc = "Permanently delete selected files" },  # 被 prepend_keymap 覆盖
	{ on = "a",         run = "create",                      desc = "Create a file (ends with / for directories)" },
	# { on = "r",         run = "rename --cursor=before_ext",  desc = "Rename selected file(s)" },  # 被 prepend_keymap 覆盖
	{ on = ".",         run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
	{ on = "s",         run = "search --via=fd",             desc = "Search files by name via fd" },
	{ on = "S",         run = "search --via=rg",             desc = "Search files by content via ripgrep" },
	{ on = "<C-s>",     run = "escape --search",             desc = "Cancel the ongoing search" },
	# { on = "z",         run = "plugin fzf",                  desc = "Jump to a file/directory via fzf" },  # 被 prepend_keymap 覆盖
	# { on = "Z",         run = "plugin zoxide",               desc = "Jump to a directory via zoxide" },  # 被 prepend_keymap 覆盖

	# Linemode (被 prepend_keymap 覆盖但功能相同)
	# { on = [ "m", "s" ], run = "linemode size",        desc = "Linemode: size" },
	# { on = [ "m", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	# { on = [ "m", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	# { on = [ "m", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	# { on = [ "m", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	# { on = [ "m", "n" ], run = "linemode none",        desc = "Linemode: none" },

	# Copy（复制路径/文件名）
	{ on = [ "y", "p" ], run = "copy path",             desc = "复制文件路径" },
	{ on = [ "y", "d" ], run = "copy dirname",          desc = "复制目录路径" },
	{ on = [ "y", "f" ], run = "copy filename",         desc = "复制文件名" },
	{ on = [ "y", "n" ], run = "copy name_without_ext", desc = "复制文件名（无扩展名）" },

	# Filter
	# { on = "f", run = "filter --smart", desc = "Filter files" },  # 被 prepend_keymap 覆盖

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n", run = "find_arrow",              desc = "Next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Previous found" },

	# Sorting (被 prepend_keymap 部分覆盖)
	# { on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	# { on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	# { on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	# { on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	# { on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	# { on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	# { on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	# { on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go home" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Go ~/.config" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   desc = "Go ~/Downloads" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Jump interactively" },
	{ on = [ "g", "f" ],       run = "follow",           desc = "Follow hovered symlink" },

	# Tabs
	{ on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = "1", run = "tab_switch 0", desc = "Switch to first tab" },
	{ on = "2", run = "tab_switch 1", desc = "Switch to second tab" },
	{ on = "3", run = "tab_switch 2", desc = "Switch to third tab" },
	{ on = "4", run = "tab_switch 3", desc = "Switch to fourth tab" },
	{ on = "5", run = "tab_switch 4", desc = "Switch to fifth tab" },
	{ on = "6", run = "tab_switch 5", desc = "Switch to sixth tab" },
	{ on = "7", run = "tab_switch 6", desc = "Switch to seventh tab" },
	{ on = "8", run = "tab_switch 7", desc = "Switch to eighth tab" },
	{ on = "9", run = "tab_switch 8", desc = "Switch to ninth tab" },

	{ on = "[", run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
	{ on = "]", run = "tab_switch 1 --relative",  desc = "Switch to next tab" },

	{ on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "}", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = "w", run = "tasks:show", desc = "Show task manager" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[input]
prepend_keymap = [
  { on = "<C-q>", run = "close", desc = "取消输入" },
]

keymap = [
	{ on = "<C-c>",   run = "close",          desc = "Cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },
	{ on = "<Esc>",   run = "escape",         desc = "Back to normal mode, or cancel input" },
	{ on = "<C-[>",   run = "escape",         desc = "Back to normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                          desc = "Enter insert mode" },
	{ on = "I", run = [ "move first-char", "insert" ],   desc = "Move to the BOL, and enter insert mode" },
	{ on = "a", run = "insert --append",                 desc = "Enter append mode" },
	{ on = "A", run = [ "move eol", "insert --append" ], desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                          desc = "Enter visual mode" },
	{ on = "r", run = "replace",                         desc = "Replace a single character" },

	# Selection
	{ on = "V",     run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },
	{ on = "<C-A>", run = [ "move eol", "visual", "move bol" ], desc = "Select from EOL to BOL" },
	{ on = "<C-E>", run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",                    desc = "Move back to the start of the current or previous word" },
	{ on = "B",     run = "backward --far",              desc = "Move back to the start of the current or previous WORD" },
	{ on = "w",     run = "forward",                     desc = "Move forward to the start of the next word" },
	{ on = "W",     run = "forward --far",               desc = "Move forward to the start of the next WORD" },
	{ on = "e",     run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },
	{ on = "E",     run = "forward --far --end-of-word", desc = "Move forward to the end of the current or next WORD" },
	{ on = "<A-b>", run = "backward",                    desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move bol",        desc = "Move to the BOL" },
	{ on = "$",      run = "move eol",        desc = "Move to the EOL" },
	{ on = "_",      run = "move first-char", desc = "Move to the first non-whitespace character" },
	{ on = "^",      run = "move first-char", desc = "Move to the first non-whitespace character" },
	{ on = "<C-a>",  run = "move bol",        desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move eol",        desc = "Move to the EOL" },
	{ on = "<Home>", run = "move bol",        desc = "Move to the BOL" },
	{ on = "<End>",  run = "move eol",        desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                                      desc = "Cut selected characters" },
	{ on = "D", run = [ "delete --cut", "move eol" ],                      desc = "Cut until EOL" },
	{ on = "c", run = "delete --cut --insert",                             desc = "Cut selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move eol" ],             desc = "Cut until EOL, and enter insert mode" },
	{ on = "s", run = [ "delete --cut --insert", "move 1" ],               desc = "Cut current character, and enter insert mode" },
	{ on = "S", run = [ "move bol", "delete --cut --insert", "move eol" ], desc = "Cut from BOL until EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ],         desc = "Cut current character" },
	{ on = "y", run = "yank",                                              desc = "Copy selected characters" },
	{ on = "p", run = "paste",                                             desc = "Paste copied characters after the cursor" },
	{ on = "P", run = "paste --before",                                    desc = "Paste copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]
